//
//  unit.h
//  pcc01
//
//  Created by Riya.Liel on 2015/01/19.
//
//

#ifndef __pcc01__unit__
#define __pcc01__unit__

#include "cocos2d.h"
#include "weapon.h"
#include "Structure.h"
#include "GameScene.h"

class GameScene;

class mapobject{
    
public:
    mapobject(std::string _filename);
    virtual ~mapobject();
    
    virtual bool isCollision(mapobject* target)=0; // check a collision with the target
    virtual void progress(GameScene*)=0; //progress frame and act
    
    cocos2d::Sprite* getImage(){return unitImage;}
    line getLine(){return belonging;};
    
    void setLine(line _l);
    void moveLine(vec);
    
    bool isValid(){return valid;}
    void kill(){valid = false;}
    void releace();
    
protected:
    cocos2d::Sprite* unitImage;
    cocos2d::Size size;
    
    bool valid=true;
    
    void moveTarget(int); //move by the animation, argument is amount of movement
    
private:
    line belonging;
};

class player : public mapobject{
public:
    player(std::string _filename) :mapobject(_filename){myWeapon = blade::getInstance();}
    mapobject* attack(); //make the effect object
    
    //It is not necessary to use
    bool isCollision(mapobject* target)override{return true;}
    void progress(GameScene*)override{};
private:
    weapon* myWeapon;
};

class enemy : public mapobject{
public:
    enemy(std::string _filename,line _l);
    
    void setMovement(int _move){movement = _move;}
    int getMovement(){return movement;}
    
    void progress(GameScene*) override;
    bool isCollision(mapobject* obj) override{return true;} //todo
private:
    int movement; //Amount of movement
};

//this class is generated by player attack
class effect : public mapobject{
public:
    effect(std::string _filename,line _l);
    
    void setReach(rangeType _type); //The reach of the attack
    void setMovement(int _move){movement = _move;}
    void setRemain(int _remain){remainFrame = _remain;} //will release the remaining time reaches 0
    void setRange(int _range){Range = _range;}
    
    int getMovement(){return movement;}
    
    bool isCollision(mapobject* target) override; //If that's true , to attack the target
    void progress(GameScene*) override;
private:
    rangeType rtype; //Kind of attack range
    int movement;
    int remainFrame;
    int Range;
};

#endif /* defined(__pcc01__unit__) */
